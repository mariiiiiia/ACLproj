!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CXX	Makefile	/^CXX=clang++$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS=-Wall -O2 -g -std=c++11 $/;"	m
INCPATH	Makefile	/^INCPATH=-isystem$(HOME)\/Apps\/simbody\/simbody331\/include \\$/;"	m
KneeController	ACLsimulatorimpl.h	/^	KneeController(int numControls) : Controller()$/;"	f	class:KneeController
KneeController	ACLsimulatorimpl.h	/^class KneeController : public OpenSim::Controller$/;"	c
LIBRARYPATH	Makefile	/^LIBRARYPATH=-L$(HOME)\/Apps\/opensim\/opensim32\/lib \\$/;"	m
LIBS	Makefile	/^LIBS=-lSimTKcommon -lSimTKmath -lSimTKsimbody \\$/;"	m
OSIMUTILS_H	osimutils.h	2;"	d
OVERRIDE_11	ACLsimulatorimpl.h	/^	void connectToModel(Model& model) OVERRIDE_11;$/;"	m	class:KneeController
OsimUtils	osimutils.h	/^class OsimUtils$/;"	c
_activations	ACLsimulatorimpl.h	/^	vector<OpenSim::Function*> _activations;$/;"	m	class:KneeController
activationLog	ACLsimulatorimpl.h	/^    vector<Vector> activationLog;$/;"	m	class:KneeController
addContactGeometry	addKneeContactGeometries.cpp	/^void addContactGeometry(Model& model, string bodyName, string objName){$/;"	f
addKneeContactGeometries	addKneeContactGeometries.cpp	/^void addKneeContactGeometries(Model& model, bool LeftOrRight){$/;"	f
addMeniscusToKnee	addMeniscusToModel.cpp	/^void addMeniscusToKnee(Model& model, bool LeftOrRight){$/;"	f
calcSSact	ACLsimulatorimpl.cpp	/^void calcSSact(Model &model, Vector &activations, State &si)$/;"	f
cf	ACLsimulatorimpl.h	/^	vector<OpenSim::Function*> cf;$/;"	m	class:KneeController
computeActivations	ACLsimulatorimpl.cpp	/^void computeActivations (Model &model, const double angle, vector<OpenSim::Function*> &controlFuncs,$/;"	f
connectToModel	ACLsimulatorimpl.cpp	/^void KneeController::connectToModel(Model& model)$/;"	f	class:KneeController
disableAllForces	osimutils.cpp	/^void OsimUtils::disableAllForces(State &state, Model &model)$/;"	f	class:OsimUtils
do_decimal_point	osimutils.cpp	/^    charT do_decimal_point() const { return sep; }$/;"	f	class:punct_facet
echo	osimutils.h	11;"	d
enableAllForces	osimutils.cpp	/^void OsimUtils::enableAllForces(State &state, Model &model)$/;"	f	class:OsimUtils
evalFunc	osimutils.cpp	/^Real OsimUtils::evalFunc(OpenSim::Function *f, Real x)$/;"	f	class:OsimUtils
forwardSim	ACLsimulatorimpl.cpp	/^void forwardSim(Model model, SimTK::State& si){$/;"	f
getControlLog	ACLsimulatorimpl.h	/^    const vector<Vector> &getControlLog() {$/;"	f	class:KneeController
getControlTimesLog	ACLsimulatorimpl.h	/^	const vector<double> &getControlTimesLog() {$/;"	f	class:KneeController
inverseSimulation	inverseSimulation.cpp	/^void inverseSimulation(Model& model)$/;"	f
main	main.cpp	/^int main(int argc, char *argv[])$/;"	f
punct_facet	osimutils.cpp	/^template <class charT, charT sep> class punct_facet : public std::numpunct<charT> {$/;"	c	file:
setControlFunctions	ACLsimulatorimpl.h	/^	void setControlFunctions( vector<OpenSim::Function*> &controlFuncs){$/;"	f	class:KneeController
timesLog	ACLsimulatorimpl.h	/^    vector<double> timesLog;$/;"	m	class:KneeController
writeForcesToFile	osimutils.cpp	/^void OsimUtils::writeForcesToFile(Model &model,const string filename,$/;"	f	class:OsimUtils
writeFunctionsToFile	osimutils.cpp	/^void OsimUtils::writeFunctionsToFile(const vector<OpenSim::Function*>fs,$/;"	f	class:OsimUtils
writeFunctionsToFile	osimutils.cpp	/^void OsimUtils::writeFunctionsToFile(const vector<double> &times, $/;"	f	class:OsimUtils
